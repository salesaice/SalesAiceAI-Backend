# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# Django specific
media/
staticfiles/
static_collected/
!static/
*.pyc
migrations/__pycache__/
*/migrations/__pycache__/

# Database
*.db
*.sqlite
*.sqlite3

# IDE specific files
.vscode/
.idea/
*.swp
*.swo
*~

# JetBrains specific
.idea/
*.iml
*.ipr
*.iws

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to exclude the entire .idea/ folder from version control.
.idea/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~

# Backup files
*.bak
*.backup
*.old
*.orig

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.local
.env.development.local
.env.test.local
.env.production.local

# Uploaded files
uploads/
user_uploads/

# Email attachments
attachments/

# Temporary files
tmp/
temp/

# Cache directories
.cache/
cache/

# Local configuration files
local_settings.py
settings_local.py
dev_settings.py

# Certificates and keys
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx

# Docker
.dockerignore
Dockerfile.local
docker-compose.override.yml

# Redis dump file
dump.rdb

# PostgreSQL
*.sql

# Session files
django_session/

# Celery beat schedule file
celerybeat-schedule.db

# Whoosh index files
whoosh_index/

# Elasticsearch
elasticsearch/

# Sphinx documentation
docs/_build/

# Coverage reports
htmlcov/
.coverage
.coverage.*

# Pytest
.pytest_cache/

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# pyenv
.python-version

# mypy
.mypy_cache/

# Local development files
*.local
dev.*
development.*

# Security files
secrets.json
credentials.json
service-account-key.json

# Backup files
*.backup
*.bak
*.old

# Editor temporary files
.#*
#*#
*#
.DS_Store?

# Compressed files
*.zip
*.tar.gz
*.rar

# Package files
*.dmg
*.pkg
*.deb
*.rpm

# Application specific
avatar_cache/
profile_pics/
user_files/

# Third party service files
.aws/
.gcp/
.azure/

# Local testing files
test_files/
test_data/
fixtures/local/

# Performance monitoring
.profiling/
*.prof

# Memory dumps
*.hprof
*.heap

# IDE workspace files
workspace.xml
tasks.xml
.idea/workspace.xml
.idea/tasks.xml

# Auto-generated files
auto_generated/
generated/

# Build artifacts
build/
dist/
*.egg-info/

# Virtual environments
venv*/
.venv*/
ENV*/
env*/

# OS generated files
.DS_Store*
.Spotlight-V100
.Trashes
Icon?
ehthumbs.db
Thumbs.db

# Network files
.netrc

# Git files
.gitignore.bak

# Local development overrides
docker-compose.local.yml
docker-compose.dev.yml

# ============================================
# CUSTOM EXCLUSIONS - Only Test & Guide Files
# ============================================

# My created test files (specific ones I created)
simple_api_test.py
final_api_validation.py
test_agent_apis.py
api_test_results.json

# My created guide files (specific ones I created) 
AGENT_MODULE_PRODUCTION_READY.md
PRODUCTION_SUCCESS_FINAL.md
AGENT_MANAGEMENT_REFACTOR_SUMMARY.md
GITHUB_SETUP_COMPLETE.md